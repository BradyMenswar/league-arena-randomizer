{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport champData from '../assets/Champions/championFull.json';\nimport itemData from '../assets/Items/item.json';\nimport html2canvas from 'html2canvas';\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'league-arena-randomizer';\n    this.champ_name = '';\n    this.champ_id = '';\n    this.champ_title = '';\n    this.spell_name = '';\n    this.spell_bind = '';\n    this.starting_id = '';\n    this.starting_name = '';\n    this.boots_id = '';\n    this.boots_name = '';\n    this.mythic_id = '';\n    this.mythic_name = '';\n    this.augment_1 = '';\n    this.augment_2 = '';\n    this.augment_3 = '';\n    this.augment_4 = '';\n  }\n  getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  }\n  roll() {\n    this.rollChampion();\n    this.rollItems();\n  }\n  copyImage() {\n    html2canvas(document.querySelector(\".quick-info\"), {\n      backgroundColor: \"transparent\"\n    }).then(canvas => {\n      canvas.toBlob(function (blob) {\n        navigator.clipboard.write([new ClipboardItem(Object.defineProperty({}, blob.type, {\n          value: blob,\n          enumerable: true\n        }))]);\n      });\n    });\n  }\n  rollChampion() {\n    let num_champs = Object.keys(champData.data).length;\n    let random_index = this.getRandomInt(num_champs);\n    let random_spell = this.getRandomInt(3);\n    let champ = champData.data[Object.keys(champData.data)[random_index]];\n    this.champ_name = champ.name;\n    this.champ_id = champ.id;\n    this.champ_title = champ.title;\n    this.spell_name = champ.spells[random_spell].id;\n    switch (random_spell) {\n      case 0:\n        this.spell_bind = \"Q\";\n        break;\n      case 1:\n        this.spell_bind = \"W\";\n        break;\n      case 2:\n        this.spell_bind = \"E\";\n        break;\n    }\n  }\n  rollItems() {\n    let filteredItems = Object.values(itemData.data).filter(item => item.maps[\"30\"] === true && item.description.includes(\"ornnBonus\") === false);\n    let starting_items = filteredItems.filter(item => item.tags.includes(\"Lane\") === true && item.tags.includes(\"Vision\") === false && item.gold.base === 1000);\n    let boots = filteredItems.filter(item => item.tags.includes(\"Boots\"));\n    let mythics = filteredItems.filter(item => Object.keys(item).includes(\"into\") === true);\n    let items = filteredItems.filter(item => item.gold.purchasable === true && item.gold.base > 1000 && starting_items.includes(item) === false && boots.includes(item) === false && mythics.includes(item) === false);\n    let random_starting = this.getRandomInt(starting_items.length);\n    let random_boots = this.getRandomInt(boots.length);\n    let random_mythic = this.getRandomInt(mythics.length);\n    this.starting_name = starting_items[random_starting].name;\n    this.starting_id = starting_items[random_starting].image.full;\n    this.boots_name = boots[random_boots].name;\n    this.boots_id = boots[random_boots].image.full;\n    this.mythic_name = mythics[random_mythic].name;\n    this.mythic_id = mythics[random_mythic].image.full;\n    this.shuffleArray(items);\n    this.item_build = items.slice(0, 5);\n    let directions = [\"L\", \"C\", \"R\"];\n    this.augment_1 = directions[this.getRandomInt(3)];\n    this.augment_2 = directions[this.getRandomInt(3)];\n    this.augment_3 = directions[this.getRandomInt(3)];\n    this.augment_4 = directions[this.getRandomInt(3)];\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","champData","itemData","html2canvas","AppComponent","constructor","title","champ_name","champ_id","champ_title","spell_name","spell_bind","starting_id","starting_name","boots_id","boots_name","mythic_id","mythic_name","augment_1","augment_2","augment_3","augment_4","getRandomInt","max","Math","floor","random","shuffleArray","array","i","length","j","temp","roll","rollChampion","rollItems","copyImage","document","querySelector","backgroundColor","then","canvas","toBlob","blob","navigator","clipboard","write","ClipboardItem","Object","defineProperty","type","value","enumerable","num_champs","keys","data","random_index","random_spell","champ","name","id","spells","filteredItems","values","filter","item","maps","description","includes","starting_items","tags","gold","base","boots","mythics","items","purchasable","random_starting","random_boots","random_mythic","image","full","item_build","slice","directions","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\brady\\Documents\\Coding\\league-arena-randomizer\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport champData from '../assets/Champions/championFull.json';\nimport itemData from '../assets/Items/item.json'\nimport html2canvas from 'html2canvas';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'league-arena-randomizer';\n  champ_name = '';\n  champ_id ='';\n  champ_title = '';\n\n  spell_name = '';\n  spell_bind = '';\n\n  starting_id = '';\n  starting_name ='';\n\n  boots_id = '';\n  boots_name ='';\n\n  mythic_id='';\n  mythic_name='';\n\n  item_build : any;\n\n  augment_1 = '';\n  augment_2 = '';\n  augment_3 = '';\n  augment_4 = '';\n\n  getRandomInt(max : number) {\n    return Math.floor(Math.random() * max);\n  }\n\n  shuffleArray(array : any) {\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n  roll() {\n    this.rollChampion();\n    this.rollItems();\n  }\n\n  copyImage() {\n    html2canvas(document.querySelector(\".quick-info\") as HTMLElement, {backgroundColor: \"transparent\"}).then(canvas => {\n      canvas.toBlob(function(blob : any) {\n        navigator.clipboard\n          .write([\n            new ClipboardItem(\n              Object.defineProperty({}, blob.type, {\n                value: blob,\n                enumerable: true\n              })\n            )\n          ])\n      \n        })\n\n    })\n  }\n\n  rollChampion() {\n    let num_champs = Object.keys(champData.data).length;\n    let random_index = this.getRandomInt(num_champs);\n    let random_spell = this.getRandomInt(3);\n\n    let champ = champData.data[Object.keys(champData.data)[random_index] as keyof typeof champData.data];\n    this.champ_name = champ.name;\n    this.champ_id = champ.id;\n    this.champ_title = champ.title;\n    this.spell_name = champ.spells[random_spell].id;\n    switch(random_spell) {\n      case 0: \n        this.spell_bind = \"Q\";\n        break;\n      case 1: \n        this.spell_bind = \"W\";\n        break;\n      case 2: \n        this.spell_bind = \"E\";\n        break;\n    }\n  }\n\n  rollItems() {\n    let filteredItems = Object.values(itemData.data).filter((item:any) => \n      item.maps[\"30\"] === true && item.description.includes(\"ornnBonus\") === false\n    )\n\n    let starting_items = filteredItems.filter((item:any) => \n      item.tags.includes(\"Lane\") === true && item.tags.includes(\"Vision\") === false && item.gold.base === 1000)\n\n    let boots = filteredItems.filter((item:any) => \n      item.tags.includes(\"Boots\")\n    )\n\n    let mythics = filteredItems.filter((item:any) =>\n      Object.keys(item).includes(\"into\") === true\n    )\n\n    let items = filteredItems.filter((item :any) => \n    item.gold.purchasable === true && item.gold.base > 1000 && starting_items.includes(item) === false && boots.includes(item) === false && mythics.includes(item) === false)\n    \n    \n    let random_starting = this.getRandomInt(starting_items.length);\n    let random_boots = this.getRandomInt(boots.length);\n    let random_mythic = this.getRandomInt(mythics.length);\n\n    this.starting_name = starting_items[random_starting].name;\n    this.starting_id = starting_items[random_starting].image.full;\n    this.boots_name = boots[random_boots].name;\n    this.boots_id = boots[random_boots].image.full;\n    this.mythic_name = mythics[random_mythic].name;\n    this.mythic_id = mythics[random_mythic].image.full;\n\n    \n    this.shuffleArray(items);\n    this.item_build = items.slice(0,5);\n    \n    let directions = [\"L\", \"C\", \"R\"];\n    this.augment_1 = directions[this.getRandomInt(3)];\n    this.augment_2 = directions[this.getRandomInt(3)];\n    this.augment_3 = directions[this.getRandomInt(3)];\n    this.augment_4 = directions[this.getRandomInt(3)];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}